[tool.poetry]
name = "finice"
version = "0.0.1"
description = "Service layer for the finice application"
authors = ["Andrew Kline <andrewckline@gmail.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.scripts]
finice-db-upgrade = "finice.cli:upgrade_database"
finice-db-downgrade = "finice.cli:downgrade_database"
finice-db-revise = "finice.cli:create_revision"

[tool.poetry.dependencies]
python = "^3.9"
alembic = "^1.11.1"
marshmallow = "*"
SQLAlchemy = "*"
werkzeug = "^2.3.6"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
flake8 = "^6.0.0"
pytest = "^6.0.0"
python-semantic-release = "8.0.0-rc.2"

[tool.semantic_release]
logging_use_named_masks = true
tag_format = "v{version}"
commit_parser = "angular"
commit_author = "semantic-release <semantic-release>"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
build_command = """
    python -m pip install build~=0.10.0
    python -m build .
"""
major_on_zero = true
assets = []
version_variables = ["semantic_release/__init__.py:__version__"]
version_toml = ["pyproject.toml:project.version"]

[tool.semantic_release.commit_parser_options]
allowed_tags = [
  "build",
  "chore",
  "ci",
  "docs",
  "feat",
  "fix",
  "perf",
  "style",
  "refactor",
  "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
token = { env = "GH_TOKEN" }

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"